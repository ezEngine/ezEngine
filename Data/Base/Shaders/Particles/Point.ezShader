[PLATFORMS]
ALL

[PERMUTATIONS]

CAMERA_MODE
VERTEX_SHADER_RENDER_TARGET_ARRAY_INDEX

[RENDERSTATE]

BlendingEnabled0 = false

DepthTest = true
DepthWrite = true

[SHADER]

#define USE_COLOR0

[VERTEXSHADER]

#include <Shaders/Common/GlobalConstants.h>
#include <Shaders/Materials/MaterialInterpolator.h>
#include <Shaders/Particles/BillboardQuadParticleShaderData.h>

VS_OUT main(uint VertexID : SV_VertexID, uint InstanceID : SV_InstanceID)
{
#if CAMERA_MODE == CAMERA_MODE_STEREO
  s_ActiveCameraEyeIndex = InstanceID % 2;
#endif

  VS_OUT ret;
#if VERTEX_SHADER_RENDER_TARGET_ARRAY_INDEX == TRUE && CAMERA_MODE == CAMERA_MODE_STEREO    
  ret.RenderTargetArrayIndex = InstanceID;
#endif

  uint dataIndex = VertexID;

  ezBaseParticleShaderData baseParticle = particleBaseData[dataIndex];
  ezBillboardQuadParticleShaderData billboardData = particleBillboardQuadData[dataIndex];

  float4 position = float4(billboardData.Position, 1);

  float4 worldPosition = mul(ObjectToWorldMatrix, position);
  float4 screenPosition = mul(GetWorldToScreenMatrix(), worldPosition);

  ret.Position = screenPosition;
  ret.Color0 = UNPACKCOLOR4H(baseParticle.Color);

  return ret;
}

[GEOMETRYSHADER]

#include <Shaders/Materials/MaterialStereoGeometryShader.h>

[PIXELSHADER]

#include <Shaders/Materials/MaterialInterpolator.h>

float4 main(PS_IN Input) : SV_Target
{
  return Input.Color0;
}

